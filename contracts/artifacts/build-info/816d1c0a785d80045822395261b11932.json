{
	"id": "816d1c0a785d80045822395261b11932",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ReentrancyGuard.sol": {
				"content": "pragma solidity ^0.8.2;\r\n\r\ncontract ReentrancyGuard {\r\n    bool private _notEntered;\r\n\r\n    constructor () {\r\n        _notEntered = true;\r\n    }\r\n\r\n    modifier noReentrancy() {\r\n        require(_notEntered, \"Reentrant call\");\r\n        _;\r\n        _notEntered = true;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ReentrancyGuard.sol\":27:277  contract ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ReentrancyGuard.sol\":92:144  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ReentrancyGuard.sol\":132:136  true */\n  0x01\n    /* \"contracts/ReentrancyGuard.sol\":118:129  _notEntered */\n  0x00\n  dup1\n    /* \"contracts/ReentrancyGuard.sol\":118:136  _notEntered = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ReentrancyGuard.sol\":27:277  contract ReentrancyGuard {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ReentrancyGuard.sol\":27:277  contract ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122073cb1740c59e3ffc0c3ae1bd546c8d980898da0fa0a062e055cebd89dd45826764736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060016000806101000a81548160ff021916908315150217905550603f8060376000396000f3fe6080604052600080fdfea264697066735822122073cb1740c59e3ffc0c3ae1bd546c8d980898da0fa0a062e055cebd89dd45826764736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x37 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xCB1740C59E3FFC0C3AE1BD546C8D980898DA0FA0 LOG0 PUSH3 0xE055CE 0xBD DUP10 0xDD GASLIMIT DUP3 PUSH8 0x64736F6C63430008 MUL STOP CALLER ",
							"sourceMap": "27:250:0:-:0;;;92:52;;;;;;;;;;132:4;118:11;;:18;;;;;;;;;;;;;;;;;;27:250;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122073cb1740c59e3ffc0c3ae1bd546c8d980898da0fa0a062e055cebd89dd45826764736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xCB1740C59E3FFC0C3AE1BD546C8D980898DA0FA0 LOG0 PUSH3 0xE055CE 0xBD DUP10 0xDD GASLIMIT DUP3 PUSH8 0x64736F6C63430008 MUL STOP CALLER ",
							"sourceMap": "27:250:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "20933",
								"totalCost": "33533"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 277,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 92,
									"end": 144,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 92,
									"end": 144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 92,
									"end": 144,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 92,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 92,
									"end": 144,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 92,
									"end": 144,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 92,
									"end": 144,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 92,
									"end": 144,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 92,
									"end": 144,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 92,
									"end": 144,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 132,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 118,
									"end": 136,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 118,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 118,
									"end": 136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 277,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 277,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 277,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 277,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 277,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073cb1740c59e3ffc0c3ae1bd546c8d980898da0fa0a062e055cebd89dd45826764736f6c63430008020033",
									".code": [
										{
											"begin": 27,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 277,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x52d1cab0ddc2d9693a631b88abfab5142a5bd5cc6fca77605844f2c9ff9c1cae\",\"urls\":[\"bzz-raw://185d28c872364909c0fe546badff2311e1130950c435cd7c398cf07f449eff19\",\"dweb:/ipfs/QmPEiRRiUSV3LyarhusPU1FPT5tt6e72d22PwV54rb4TQL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_notEntered",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ReentrancyGuard.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ReentrancyGuard.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "contracts/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							25
						]
					},
					"id": 26,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "ReentrancyGuard",
							"nameLocation": "36:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "_notEntered",
									"nameLocation": "72:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 25,
									"src": "59:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "59:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "107:37:0",
										"statements": [
											{
												"expression": {
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "_notEntered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "118:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "132:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "118:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 9,
												"nodeType": "ExpressionStatement",
												"src": "118:18:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "107:0:0"
									},
									"scope": 25,
									"src": "92:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "176:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 14,
															"name": "_notEntered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "195:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e742063616c6c",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "208:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb",
																"typeString": "literal_string \"Reentrant call\""
															},
															"value": "Reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb",
																"typeString": "literal_string \"Reentrant call\""
															}
														],
														"id": 13,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "187:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "187:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "187:38:0"
											},
											{
												"id": 18,
												"nodeType": "PlaceholderStatement",
												"src": "236:1:0"
											},
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "_notEntered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "248:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "262:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "248:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "248:18:0"
											}
										]
									},
									"id": 24,
									"name": "noReentrancy",
									"nameLocation": "161:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:2:0"
									},
									"src": "152:122:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 26,
							"src": "27:250:0"
						}
					],
					"src": "0:277:0"
				},
				"id": 0
			}
		}
	}
}